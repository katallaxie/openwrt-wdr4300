# This file is interpreted as shell script.
# Put your custom iptables rules here, they will
# be executed with each firewall (re-)start.

# Internal uci firewall chains are flushed and recreated on reload, so
# put custom rules into the root chains e.g. INPUT or FORWARD or into the
# special user chains, e.g. input_wan_rule or postrouting_lan_rule.

. /usr/lib/aqm/functions.sh

# First, delete all
reset_iptables ip6tables

# ICMPv6 Stastics
icmpv6_stats

ipset flush dns6
ipset destroy dns6

ipset -! create dns6 hash:ip family inet6
ipset add dns6 2001:4860:4860::8888
ipset add dns6 2001:4860:4860::8844
ipset add dns6 2620:0:ccc::2 
ipset add dns6 2620:0:ccd::2

# Set the default policy                                                                                    
ip6tables -P INPUT DROP                                                                                     
ip6tables -P FORWARD DROP                                                                                   
ip6tables -P OUTPUT DROP 

# Log dropped packets           
#ip6tables -N DROP           
#ip6tables -A INPUT -j LOG --log-prefix '[ip6tables DROP]:'
#ip6tables -A DROP_LOG -j REJECT --reject-with icmp6-port-unreachable

# Doing statistics on icmp
ip6tables -A OUTPUT -p 58 -j ICMP6_STATS
ip6tables -A FORWARD -p 58 -j ICMP6_STATS

# drop packets with routing header type 0 and any remaining segments (more than 0)               
# deprecating RFC: http://www.ietf.org/rfc/rfc5095.txt                           
# amplification attack: http://www.secdev.org/conf/IPv6_RH_security-csw07.pdf     
ip6tables -A INPUT -m rt --rt-type 0 -j DROP                                                 
ip6tables -A OUTPUT -m rt --rt-type 0 -j DROP                                                 
ip6tables -A FORWARD -m rt --rt-type 0 -j DROP

# Stealth Scans etc. DROPen
ip6tables -A INPUT -p tcp --tcp-flags ALL NONE -j DROP
ip6tables -A INPUT -p tcp --tcp-flags SYN,FIN SYN,FIN -j DROP
ip6tables -A INPUT -p tcp --tcp-flags SYN,RST SYN,RST -j DROP
ip6tables -A INPUT -p tcp --tcp-flags FIN,RST FIN,RST -j DROP
ip6tables -A INPUT -p tcp --tcp-flags ACK,FIN FIN -j DROP
ip6tables -A INPUT -p tcp --tcp-flags ACK,PSH PSH -j DROP
ip6tables -A INPUT -p tcp --tcp-flags ACK,URG URG -j DROP

# Allow anything on the local link
ip6tables -A INPUT  -i lo -j ACCEPT
ip6tables -A OUTPUT -o lo -j ACCEPT

# Allow anything out on the internet
ip6tables -A OUTPUT -o eth0.2 -j ACCEPT

# Allow Link-Local addresses
ip6tables -A INPUT -s fe80::/10 -j ACCEPT
ip6tables -A OUTPUT -s fe80::/10 -j ACCEPT

# Allow multicast
ip6tables -A INPUT -s ff00::/8 -j ACCEPT
ip6tables -A OUTPUT -s ff00::/8 -j ACCEPT

# Allow DNS
ip6tables -I OUTPUT -o br-lan -p udp -m set --match-set dns6 dst --dport 53 -j ACCEPT
ip6tables -I INPUT -i br-lan -p udp -m set --match-set dns6 src --sport 53 -j ACCEPT

#ip6tables -I INPUT -i br-lan -m set --match-set dns src -j ACCEPT
#ip6tables -I OUTPUT -o br-lan -m set --match-set dns dst -j ACCEPT

# Allow ICMP (and thus SLAAC, etc) 
ip6tables -A INPUT -p icmpv6 -m limit --limit 30/min -j ACCEPT

# Allow DHCPv6 configuration
ip6tables -A INPUT -p udp --sport 547 --dport 546 -j ACCEPT
ip6tables -A FORWARD -s fe80::/10 -p udp --sport 547 --dport 546 -j ACCEPT

# Allow ICMPv6
ip6tables -A INPUT -p icmpv6 --icmpv6-type echo-request --match limit --limit 30/minute -j ACCEPT
ip6tables -A FORWARD -p icmpv6 -m physdev ! --physdev-in eth0.2 -j ACCEPT
ip6tables -A FORWARD -p icmpv6 --icmpv6-type echo-request -m physdev --physdev-in eth0.2 -j ACCEPT
ip6tables -A FORWARD -p icmpv6 --icmpv6-type echo-reply -m physdev --physdev-in eth0.2 -j ACCEPT
ip6tables -A FORWARD -p icmpv6 --icmpv6-type neighbor-solicitation -m physdev --physdev-in eth0.2 -j ACCEPT
ip6tables -A FORWARD -p icmpv6 --icmpv6-type neighbor-advertisement -m physdev --physdev-in eth0.2 -j ACCEPT
ip6tables -A FORWARD -p icmpv6 --icmpv6-type router-advertisement -m physdev --physdev-in eth0.2 -j ACCEPT

# Allow forwarding
ip6tables -A FORWARD -m state --state NEW -m physdev ! --physdev-in eth0.2 -j ACCEPT
#ip6tables -A FORWARD -m state --state NEW -p tcp --dport 22 -m physdev --physdev-in eth0.2 -j ACCEPT
ip6tables -A FORWARD -m state --state ESTABLISHED,RELATED -j ACCEPT

#ip6tables -t mangle -A PREROUTING -p udp -m udp --sport 53 -j DSCP --set-dscp-class ef
#ip6tables -t mangle -A PREROUTING -p udp -m udp --dport 53 -j DSCP --set-dscp-class ef
